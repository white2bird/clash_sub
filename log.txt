INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/30'], next run at: 2023-08-18 22:37:30 CST)" (scheduled at 2023-08-18 22:37:30+08:00)
INFO:root:---start  crawl----
INFO:root:---clash successed---------
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/30'], next run at: 2023-08-18 22:38:00 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/30'], next run at: 2023-08-18 22:40:30 CST)" (scheduled at 2023-08-18 22:40:30+08:00)
INFO:root:---start  crawl----
INFO:root:---clash successed---------
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/30'], next run at: 2023-08-18 22:41:00 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/30'], next run at: 2023-08-18 22:42:30 CST)" (scheduled at 2023-08-18 22:42:30+08:00)
INFO:root:---start  crawl----
INFO:root:---clash successed---------
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/30'], next run at: 2023-08-18 22:43:00 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:08:30 CST)" (scheduled at 2023-08-18 23:08:30+08:00)
INFO:root:---start  logging----
ERROR:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:08:40 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 74, in login
    email2passwd = emailInfo.split(',')
TypeError: a bytes-like object is required, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/ikuuu_login_schedule.py", line 20, in initialize_scheduler
    login(emails)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 90, in login
    logger.error('ç­¾åˆ°å¤±è´¥email: ' + email)
UnboundLocalError: local variable 'email' referenced before assignment
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:08:50 CST)" (scheduled at 2023-08-18 23:08:40+08:00)
INFO:root:---start  logging----
ERROR:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:08:50 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 74, in login
    email2passwd = emailInfo.split(',')
TypeError: a bytes-like object is required, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/ikuuu_login_schedule.py", line 20, in initialize_scheduler
    login(emails)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 90, in login
    logger.error('ç­¾åˆ°å¤±è´¥email: ' + email)
UnboundLocalError: local variable 'email' referenced before assignment
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:09:00 CST)" (scheduled at 2023-08-18 23:08:50+08:00)
INFO:root:---start  logging----
ERROR:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:09:00 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 74, in login
    email2passwd = emailInfo.split(',')
TypeError: a bytes-like object is required, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/ikuuu_login_schedule.py", line 20, in initialize_scheduler
    login(emails)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 90, in login
    logger.error('ç­¾åˆ°å¤±è´¥email: ' + email)
UnboundLocalError: local variable 'email' referenced before assignment
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:09:40 CST)" (scheduled at 2023-08-18 23:09:40+08:00)
INFO:root:---start  logging----
ERROR:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:09:50 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/ikuuu_login_schedule.py", line 20, in initialize_scheduler
    login(emails)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 71, in login
    email2passwd = emailInfo.split(',')
TypeError: a bytes-like object is required, not 'str'
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:10:00 CST)" (scheduled at 2023-08-18 23:09:50+08:00)
INFO:root:---start  logging----
ERROR:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:10:00 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/ikuuu_login_schedule.py", line 20, in initialize_scheduler
    login(emails)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/script/ikuuu_login.py", line 71, in login
    email2passwd = emailInfo.split(',')
TypeError: a bytes-like object is required, not 'str'
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:11:00 CST)" (scheduled at 2023-08-18 23:11:00+08:00)
INFO:root:---start  logging----
INFO:root:email:b'lumingzeandhuiliyi@outlook.comstart login
ERROR:root:ç­¾åˆ°å¤±è´¥email: b'lumingzeandhuiliyi@outlook.com
INFO:root:email:b'lumingzeandhuiliyi@hotmail.comstart login
ERROR:root:ç­¾åˆ°å¤±è´¥email: b'lumingzeandhuiliyi@hotmail.com
INFO:root:email:b'lumingzeandhuiliyi@gmail.comstart login
ERROR:root:ç­¾åˆ°å¤±è´¥email: b'lumingzeandhuiliyi@gmail.com
INFO:root:email:b'lumingfeiadhuiliyi@gmail.comstart login
ERROR:root:ç­¾åˆ°å¤±è´¥email: b'lumingfeiadhuiliyi@gmail.com
INFO:root:email:b'2714269544@qq.comstart login
ERROR:root:ç­¾åˆ°å¤±è´¥email: b'2714269544@qq.com
INFO:root:email:b'1096576877@qq.comstart login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:11:10 CST)" skipped: maximum number of running instances reached (1)
ERROR:root:ç­¾åˆ°å¤±è´¥email: b'1096576877@qq.com
INFO:root:logging success
INFO:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:11:20 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:11:40 CST)" (scheduled at 2023-08-18 23:11:40+08:00)
INFO:root:---start  logging----
INFO:root:email:b'lumingzeandhuiliyi@outlook.comstart login
INFO:root:email:b'lumingzeandhuiliyi@hotmail.comstart login
INFO:root:email:b'lumingzeandhuiliyi@gmail.comstart login
INFO:root:email:b'lumingfeiadhuiliyi@gmail.comstart login
INFO:root:email:b'2714269544@qq.comstart login
INFO:root:email:b'1096576877@qq.comstart login
INFO:root:logging success
INFO:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:11:50 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:12:40 CST)" (scheduled at 2023-08-18 23:12:40+08:00)
INFO:root:---start  logging----
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:12:50 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:13:00 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:13:10 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:13:20 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:13:30 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:13:40 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:13:50 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:14:00 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:14:10 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:14:20 CST)" skipped: maximum number of running instances reached (1)
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:14:30 CST)" skipped: maximum number of running instances reached (1)
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:14:40 CST)" (scheduled at 2023-08-18 23:14:40+08:00)
INFO:root:---start  logging----
INFO:root:email:lumingzeandhuiliyi@outlook.comstart login
INFO:root:email:lumingzeandhuiliyi@hotmail.comstart login
INFO:root:email:lumingzeandhuiliyi@gmail.comstart login
INFO:root:email:lumingfeiadhuiliyi@gmail.comstart login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:14:50 CST)" skipped: maximum number of running instances reached (1)
INFO:root:email:2714269544@qq.comstart login
INFO:root:email:1096576877@qq.comstart login
INFO:root:logging success
INFO:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:15:00 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:17:00 CST)" (scheduled at 2023-08-18 23:17:00+08:00)
INFO:root:---start  logging----
INFO:root:email:lumingzeandhuiliyi@outlook.comstart login
INFO:root:email:lumingzeandhuiliyi@hotmail.comstart login
INFO:root:email:lumingzeandhuiliyi@gmail.comstart login
INFO:root:email:lumingfeiadhuiliyi@gmail.comstart login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:17:10 CST)" skipped: maximum number of running instances reached (1)
INFO:root:email:2714269544@qq.comstart login
INFO:root:email:1096576877@qq.comstart login
INFO:root:logging success
INFO:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:17:20 CST)" executed successfully
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:17:30 CST)" (scheduled at 2023-08-18 23:17:20+08:00)
INFO:root:---start  logging----
INFO:root:email:lumingzeandhuiliyi@outlook.comstart login
INFO:root:email:lumingzeandhuiliyi@hotmail.comstart login
INFO:root:email:lumingzeandhuiliyi@gmail.comstart login
INFO:root:email:lumingfeiadhuiliyi@gmail.comstart login
INFO:root:email:2714269544@qq.comstart login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-18 23:17:30 CST)" skipped: maximum number of running instances reached (1)
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:23:20 CST)" (scheduled at 2023-08-19 00:23:20+08:00)
ERROR:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:24:20 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/clash_scrapy_schedule.py", line 60, in initialize_scheduler
    Redis.zadd('clash_url', {section.string: str(int(time.time()))})
TypeError: zadd() missing 1 required positional argument: 'member'
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:24:20 CST)" (scheduled at 2023-08-19 00:24:20+08:00)
ERROR:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:25:20 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/clash_scrapy_schedule.py", line 60, in initialize_scheduler
    Redis.zadd('clash_url', section.string, int(time.time()))
  File "/Users/mico/PycharmProjects/flask_clash/util/redisUtil.py", line 109, in zadd
    return cls._get_r().zadd(name, {member: value})
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/commands/core.py", line 4170, in zadd
    return self.execute_command("ZADD", name, *pieces, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 508, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 509, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 485, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 525, in parse_response
    response = connection.read_response()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/connection.py", line 516, in read_response
    raise response
redis.exceptions.ResponseError: value is not a valid float
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:25:20 CST)" (scheduled at 2023-08-19 00:25:20+08:00)
ERROR:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:26:20 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/clash_scrapy_schedule.py", line 58, in initialize_scheduler
    Redis.zadd('clash_url', section.string, time.time())
  File "/Users/mico/PycharmProjects/flask_clash/util/redisUtil.py", line 109, in zadd
    return cls._get_r().zadd(name, {member: value})
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/commands/core.py", line 4170, in zadd
    return self.execute_command("ZADD", name, *pieces, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 508, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 509, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 485, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 525, in parse_response
    response = connection.read_response()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/connection.py", line 516, in read_response
    raise response
redis.exceptions.ResponseError: value is not a valid float
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:27:20 CST)" (scheduled at 2023-08-19 00:26:20+08:00)
ERROR:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:27:20 CST)" raised an exception
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/apscheduler/executors/base.py", line 125, in run_job
    retval = job.func(*job.args, **job.kwargs)
  File "/Users/mico/PycharmProjects/flask_clash/schedule/clash_scrapy_schedule.py", line 58, in initialize_scheduler
    Redis.zadd('clash_url', section.string, time.time())
  File "/Users/mico/PycharmProjects/flask_clash/util/redisUtil.py", line 109, in zadd
    return cls._get_r().zadd(name, {member: value})
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/commands/core.py", line 4170, in zadd
    return self.execute_command("ZADD", name, *pieces, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 508, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 509, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 485, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 525, in parse_response
    response = connection.read_response()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/connection.py", line 516, in read_response
    raise response
redis.exceptions.ResponseError: value is not a valid float
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:31:20 CST)" (scheduled at 2023-08-19 00:31:20+08:00)
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:32:20 CST)" (scheduled at 2023-08-19 00:32:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:33:20 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:33:20 CST)" (scheduled at 2023-08-19 00:33:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:34:20 CST)" executed successfully
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:35:20 CST)" (scheduled at 2023-08-19 00:34:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:35:20 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:36:20 CST)" (scheduled at 2023-08-19 00:36:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:37:20 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:45:20 CST)" (scheduled at 2023-08-19 00:45:20+08:00)
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:45:20 CST)" (scheduled at 2023-08-19 00:45:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:46:20 CST)" executed successfully
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:46:20 CST)" executed successfully
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:47:20 CST)" (scheduled at 2023-08-19 00:46:20+08:00)
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:47:20 CST)" (scheduled at 2023-08-19 00:46:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:47:20 CST)" executed successfully
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:47:20 CST)" executed successfully
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:48:20 CST)" (scheduled at 2023-08-19 00:47:20+08:00)
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:48:20 CST)" (scheduled at 2023-08-19 00:47:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:48:20 CST)" executed successfully
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:48:20 CST)" executed successfully
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:49:20 CST)" (scheduled at 2023-08-19 00:48:20+08:00)
INFO:apscheduler.executors.default:Running job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:49:20 CST)" (scheduled at 2023-08-19 00:48:20+08:00)
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initialize_url1_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:49:20 CST)" executed successfully
INFO:apscheduler.executors.default:Job "register_clash_schedule.<locals>.initial_url2_scheduler (trigger: cron[second='20'], next run at: 2023-08-19 00:49:20 CST)" executed successfully
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on /clash/sub [GET]
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
TypeError: clash_sub() missing 1 required positional argument: 'request'
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 00:49:48] "[35m[1mGET /clash/sub HTTP/1.1[0m" 500 -
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on /clash/sub [GET]
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1487, in full_dispatch_request
    return self.finalize_request(rv)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1506, in finalize_request
    response = self.make_response(rv)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1801, in make_response
    raise TypeError(
TypeError: The view function for 'clash_sub' did not return a valid response. The function either returned None or ended without a return statement.
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 00:50:30] "[35m[1mGET /clash/sub HTTP/1.1[0m" 500 -
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 00:51:38] "GET /clash/sub HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 00:51:54] "GET /clash/sub?random=1096576877 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 00:52:36] "GET /clash/sub HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 00:52:59] "GET /clash/sub?random=1096576877 HTTP/1.1" 200 -
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on /heart [GET]
Traceback (most recent call last):
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/Users/mico/PycharmProjects/flask_clash/app.py", line 33, in heart
    test_value = Redis.read("test")
  File "/Users/mico/PycharmProjects/flask_clash/util/redisUtil.py", line 33, in read
    value = r.get(key)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/commands/core.py", line 1829, in get
    return self.execute_command("GET", name)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 508, in execute_command
    return conn.retry.call_with_retry(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/retry.py", line 46, in call_with_retry
    return do()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 509, in <lambda>
    lambda: self._send_command_parse_response(
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 485, in _send_command_parse_response
    return self.parse_response(conn, command_name, **options)
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/client.py", line 525, in parse_response
    response = connection.read_response()
  File "/Users/mico/PycharmProjects/flask_clash/venv/lib/python3.9/site-packages/redis/connection.py", line 516, in read_response
    raise response
redis.exceptions.ResponseError: WRONGTYPE Operation against a key holding the wrong kind of value
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 21:32:50] "[35m[1mGET /heart HTTP/1.1[0m" 500 -
INFO:werkzeug:127.0.0.1 - - [19/Aug/2023 21:33:57] "GET /heart HTTP/1.1" 200 -
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-19 23:52:40 CST)" (scheduled at 2023-08-19 23:52:40+08:00)
INFO:root:---start  logging----
INFO:root:email: lumingzeandhuiliyi@outlook.com start login
INFO:root:email: lumingzeandhuiliyi@hotmail.com start login
INFO:root:email: lumingzeandhuiliyi@gmail.com start login
INFO:root:email: lumingfeiadhuiliyi@gmail.com start login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-19 23:52:50 CST)" skipped: maximum number of running instances reached (1)
INFO:root:email: 2714269544@qq.com start login
INFO:root:email: 1096576877@qq.com start login
INFO:root:logging success
INFO:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-19 23:53:00 CST)" executed successfully
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-19 23:53:10 CST)" (scheduled at 2023-08-19 23:53:00+08:00)
INFO:root:---start  logging----
INFO:root:email: lumingzeandhuiliyi@outlook.com start login
INFO:root:email: lumingzeandhuiliyi@hotmail.com start login
INFO:root:email: lumingzeandhuiliyi@gmail.com start login
INFO:root:email: lumingfeiadhuiliyi@gmail.com start login
INFO:root:email: 2714269544@qq.com start login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-19 23:53:10 CST)" skipped: maximum number of running instances reached (1)
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8898
 * Running on http://192.168.255.10:8898
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts
INFO:apscheduler.scheduler:Added job "register_login_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initialize_url1_scheduler" to job store "default"
INFO:apscheduler.scheduler:Added job "register_clash_schedule.<locals>.initial_url2_scheduler" to job store "default"
INFO:apscheduler.scheduler:Scheduler started
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:apscheduler.executors.default:Running job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-29 22:44:20 CST)" (scheduled at 2023-08-29 22:44:20+08:00)
INFO:root:---start  logging----
INFO:root:email: lumingzeandhuiliyi@outlook.com start login
INFO:root:email: lumingzeandhuiliyi@hotmail.com start login
INFO:root:email: lumingzeandhuiliyi@gmail.com start login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-29 22:44:30 CST)" skipped: maximum number of running instances reached (1)
INFO:root:email: lumingfeiadhuiliyi@gmail.com start login
INFO:root:email: 2714269544@qq.com start login
INFO:root:email: 1096576877@qq.com start login
WARNING:apscheduler.scheduler:Execution of job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-29 22:44:40 CST)" skipped: maximum number of running instances reached (1)
INFO:root:logging success
INFO:apscheduler.executors.default:Job "register_login_schedule.<locals>.initialize_scheduler (trigger: cron[second='*/10'], next run at: 2023-08-29 22:44:50 CST)" executed successfully
